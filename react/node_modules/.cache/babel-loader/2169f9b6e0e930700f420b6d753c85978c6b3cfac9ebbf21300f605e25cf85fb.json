{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\App-Alliance\\\\react\\\\src\\\\components\\\\Busqueda.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/busqueda.css';\n// import lupa from '../img/lupa.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Busqueda = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate('');\n\n  // const handleRefresh = () => {\n  //     window.location.reload();\n  //   };\n\n  const fetchAllUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/users');\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n\n  // const handleSearch = async () => {\n  //     try {\n  //         const response = await fetch(`http://localhost:3000/api/users/search?name=${searchTerm}`);\n  //         const data = await response.json();\n  //         setUsers(data);\n  //     } catch (error) {\n  //         console.error('Error searching users:', error);\n  //     }\n  // };\n\n  const filterUsers = () => {\n    return users.filter(user => user.nombreUsuario.toLowerCase().includes(searchTerm.toLowerCase()));\n  };\n  useEffect(() => {\n    fetchAllUsers();\n  }, []);\n  useEffect(() => {\n    // This effect will run every time searchTerm changes and will filter users in real-time\n    filterUsers();\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nameApp\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"All\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"ALLIANCE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"BUSCA CONTACTOS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-perfil\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sect-img\",\n            children: \"imagen de perfil de usuario chica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buscador\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Buscar usuarios\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SectorBuscador\",\n      children: filterUsers().map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SectPerfil\",\n        onClick: () => navigate(`/perfil/${user.id}`),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Perfil\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgenPerfil\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:3000/uploads/${user.imagenPerfil}`,\n              alt: `${user.nombreUsuario} perfil`,\n              className: \"profile-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"NomUsuario\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: user.nombreUsuario\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: user.descripcion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Busqueda, \"giM20CRMdI8XBsA2sFhaoD4Xg3I=\", false, function () {\n  return [useNavigate];\n});\n_c = Busqueda;\nexport default Busqueda;\nvar _c;\n$RefreshReg$(_c, \"Busqueda\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Busqueda","_s","users","setUsers","searchTerm","setSearchTerm","navigate","fetchAllUsers","response","fetch","data","json","error","console","filterUsers","filter","user","nombreUsuario","toLowerCase","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","onClick","id","src","imagenPerfil","alt","descripcion","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/App-Alliance/react/src/components/Busqueda.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../css/busqueda.css'\r\n// import lupa from '../img/lupa.svg';\r\n\r\nconst Busqueda = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const navigate = useNavigate('');\r\n\r\n    // const handleRefresh = () => {\r\n    //     window.location.reload();\r\n    //   };\r\n\r\n    const fetchAllUsers = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:3000/api/users');\r\n            const data = await response.json();\r\n            setUsers(data);\r\n        } catch (error) {\r\n            console.error('Error fetching users:', error);\r\n        }\r\n    };\r\n\r\n    // const handleSearch = async () => {\r\n    //     try {\r\n    //         const response = await fetch(`http://localhost:3000/api/users/search?name=${searchTerm}`);\r\n    //         const data = await response.json();\r\n    //         setUsers(data);\r\n    //     } catch (error) {\r\n    //         console.error('Error searching users:', error);\r\n    //     }\r\n    // };\r\n\r\n    const filterUsers = () => {\r\n        return users.filter(user =>\r\n            user.nombreUsuario.toLowerCase().includes(searchTerm.toLowerCase())\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAllUsers();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        // This effect will run every time searchTerm changes and will filter users in real-time\r\n        filterUsers();\r\n    }, [searchTerm]);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className='body-head'>\r\n                   <div className='nameApp'>\r\n                      <div className='All'>\r\n                        <h1>ALLIANCE</h1>\r\n                        <p>BUSCA CONTACTOS</p>\r\n                      </div>\r\n                   </div> \r\n                  <div className='img-perfil'> \r\n                    <div className='sect-img'>\r\n                        imagen de perfil de usuario chica\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n            <div className='buscador'>\r\n              <input\r\n                 type=\"text\"\r\n                 placeholder=\"Buscar usuarios\"\r\n                 value={searchTerm}\r\n                 onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n               {/* <button onClick={handleSearch}>Buscar</button> */}\r\n               {/* <button onClick={handleRefresh}> Refresh</button> */}\r\n            </div>\r\n            <div className='SectorBuscador'>\r\n                {/* {users.map(user => ( */}\r\n                {filterUsers().map(user => (\r\n                    <div className='SectPerfil' key={user.id} onClick={() => navigate(`/perfil/${user.id}`)}>\r\n                        <div className='Perfil'>\r\n                            <div className='imgenPerfil'>\r\n                              <img \r\n                               src={`http://localhost:3000/uploads/${user.imagenPerfil}`} \r\n                               alt={`${user.nombreUsuario} perfil`} \r\n                               className=\"profile-image\"\r\n                             />\r\n                            </div>\r\n                            <div className='NomUsuario'>\r\n                              <h3>{user.nombreUsuario}</h3>\r\n                              <p>{user.descripcion}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Busqueda;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}